<?php
/**
  * wechat php test
  */
// require ("./log/log.php");
require './common/Db.php';
define("TOKEN", "weixin");
//ahsfuoaifha

$wechatObj = new wechatCallbackapiTest();
// $wechatObj->valid();
$wechatObj->getInfo();
$wechatObj->responseMsg();

class wechatCallbackapiTest
{

    private $toUserName;     //消息接收者微信id
    private $fromUserName;   //消息发送者id
    private $msgType;        //发送类型
    private $recContent;     //接收的内容
    private $sendContent;    //发送的内容
    private $funcFlag;       //星标

    //地图
    //
    private $location_x;     //纬度
    private $location_y;      //经度
    private $scale;          //缩略大小
    private $label;          //地理位置信息


    //图片消息
    //
    private $picUrl;         //图片链接


    private $log;           //log
    private $Db;            //数据库




    public  function getInfo()
    {
         $this->log =new log();
         // $aa= $this->shorturl2("http://202.119.236.249/buscheck/bus/detail.php");
            // var_dump($aa);
        // echo  $shortUrl=$this->shortUrl("http://202.119.236.249/buscheck/bus/detail.php");

        $postStr = $GLOBALS["HTTP_RAW_POST_DATA"];

        if (!empty($postStr)) {

            # code...
                $postObj = simplexml_load_string($postStr, 'SimpleXMLElement', LIBXML_NOCDATA);

                $this->fromUserName=  $postObj->FromUserName;
                $this->toUserName  =  $postObj->ToUserName;
                $this->msgType  =  $postObj->MsgType;
                switch ($postObj->MsgType) {
                    case 'text':
                        # code...
                        $this->recContent= $postObj->Content;//收到的消息
                        break;
                    case 'location':
                        # code...
                        $this->location_x =   $postObj->Location_X;
                        $this->location_y =   $postObj->Location_Y;
                        $this->scale      =   $postObj->Scale;
                        $this->label      =   $postObj->Label;

                        break;
                    case 'image':
                        # code...
                        $this->picUrl     =   $postObj->PicUrl;
                        break;
                    
                    default:
                        # code...
                        break;
                }

                
        }

    }

    public function responseMsg()
    {
       //检查用户
        $this->checkUser();
        $ab=$this->splitStr($this->recContent);
        // echo $this->sendMsg($ab[0]);
        
        //回复
        switch ($this->msgType) {
            case 'text':
                
                 switch ($ab[0]) {
                                 case '注册':
                                    $string="成功记录，你可以发送任意信息获得你需要的信息";
                                     echo $this->sendMsg($string);
                                     break;
                                 
                                 default:
                                     # code...
                                     break;
                             }            
                $string ='你常用的97路公交到达仙林中心车站需要2分钟';

                echo $this->sendMsg($string);
                break;
            case 'location':
                $a=microtime(true);

                //$shortUrl=$this->shortUrl("http://baidu.com/");
                
                $imageUrl="http://202.119.236.249/buscheck/images";
                $b=microtime(true)-$a;
                    $this->log->addLog($imageUrl.'D1.jpg');
                $key = array(0=>array('title'=>'D1路','description'=>'点击详细','picUrl'=>$imageUrl.'D1.jpg','url'=>'http://baidu.com'),
                             1=>array('title'=>'96路','description'=>'点击详细','picUrl'=>$imageUrl.'143.jpg','url'=>'http://baidu.com'),
                            2=>array('title'=>'93路','description'=>'点击详细','picUrl'=>$imageUrl.'143.jpg','url'=>'http://baidu.com'),                                

                        );
                

                echo $this->sendNews($key);
                $string='你最近的公交站有'."\n"
                    .'南京车站http://202.119.236.249/buscheck/bus/detail.php'."\n"
                    .'火车广场东'.$shortUrl."\n"
                    .'新庄广场东'.$shortUrl."\n"
                    .'长途东站'.$shortUrl."\n\n"
                    .'部分公交车有'."\n"
                    .'97路'.$shortUrl."\n"
                    .'92路'.$shortUrl.

                    '你可以点击链接查看具体信息';
                echo $this->sendMsg($string);
                break;
           
            default:
                # code...
                break;
        }


        
        
                
        
    }


    private function checkUser()
    {
            $this->Db=new Db();
            $result=    $this->Db->query("select * from njgjcx_user where njgjcx_user_wxId ='".$this->fromUserName."'");
            $row=mysql_num_rows($result);

            if($row !=1){

            echo $this->sendMsg("你好，你可以注册你常用的公交车站和公交车\n格式是 注册+(车站名)+(公交车号)");
                $dataArray = array('njgjcx_user_wxId' =>$this->fromUserName );

                $this->Db->insert("njgjcx_user",$dataArray);
                exit();
            }


    }

    private function sendMsg($contentStr)
    {
        // $time = time();
       $textTpl = "<xml>
                            <ToUserName><![CDATA[%s]]></ToUserName>
                            <FromUserName><![CDATA[%s]]></FromUserName>
                            <CreateTime>%s</CreateTime>
                            <MsgType><![CDATA[%s]]></MsgType>
                            <Content><![CDATA[%s]]></Content>
                            <FuncFlag>0</FuncFlag>
                            </xml>";
        $resultStr = sprintf($textTpl, $this->fromUserName, $this->toUserName, time(), 'text', $contentStr);
        return $resultStr;  

    }

    public function sendNews($data)
    {   $time=time();
        $textTpl = " <xml>
 <ToUserName><![CDATA[%s]]></ToUserName>
 <FromUserName><![CDATA[%s]]></FromUserName>
 <CreateTime><![CDATA[%s]]></CreateTime>
 <MsgType><![CDATA[news]]></MsgType>
 <Content><![CDATA[]]></Content>
 <ArticleCount><![CDATA[%s]]></ArticleCount>
 <Articles>";

    foreach ($data as $key1 => $value1) {
      // foreach ($value1 as $key2 => $value2) {
          $textTpl .="<item>
        <Title>".$value1['title']."</Title>
        <Description>".$value1['description']."</Description>
            <PicUrl>".$value1['picUrl']."</PicUrl>
         <Url>".$value1['url']."</Url>
     </item>";
       // $this->log->addLog($textTpl);
      // }
    }
    $textTpl .="</Articles>
  <FuncFlag>1</FuncFlag>
  </xml> ";

        $this->log->addLog($textTpl);
 

        $resultStr = sprintf($textTpl, $this->fromUserName, $this->toUserName, time(), count($data));
        return $resultStr;  
    }


    public function shortUrl($url)
            {
                $this->log->addLog($url);
            $ch=curl_init();
            curl_setopt($ch,CURLOPT_URL,"http://dwz.cn/create.php");
            curl_setopt($ch,CURLOPT_POST,true);
            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
            $data=array('url'=>$url);
            curl_setopt($ch,CURLOPT_POSTFIELDS,$data);
            $strRes=curl_exec($ch);
            curl_close($ch);
            $arrResponse=json_decode($strRes,true);
            if($arrResponse['status']==0)
            {
            /**错误处理*/
            echo iconv('UTF-8','GBK',$arrResponse['err_msg'])."\n";
            }
            /** tinyurl */
                return $arrResponse['tinyurl']."\n";   # code...
            }	

      public function splitStr($str)
            {

                    $orderDataArray= explode('+', substr($str, 0));
                    return $orderDataArray;

            }      

// <item>
//  <Title><![CDATA[title]]></Title>
//  <Description><![CDATA[description]]></Description>
//  <PicUrl><![CDATA[picurl]]></PicUrl>
//  <Url><![CDATA[url]]></Url>
//  </item>
//   </Articles>
//  <FuncFlag>1</FuncFlag>
//  </xml> ";
//     public function shorturl2($input) {
//         $base32 = array (
//             'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h',
//              'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p',
//              'q', 'r', 's', 't', 'u', 'v', 'w', 'x',
//              'y', 'z', '0', '1', '2', '3', '4', '5'
//     );
 
//                 $hex = md5($input);
//               $hexLen = strlen($hex);
//                 $subHexLen = $hexLen / 8;
//                 $output = array();
 
//   for ($i = 0; $i < $subHexLen; $i++) {
//     $subHex = substr ($hex, $i * 8, 8);
//     $int = 0x3FFFFFFF & (1 * ('0x'.$subHex));
//     $out = '';
 
//     for ($j = 0; $j < 6; $j++) {
//       $val = 0x0000001F & $int;
//       $out .= $base32[$val];
//       $int = $int >> 5;
//     }
 
//     $output[] = $out;
//   }
 
//   return $output;
// }	
	
}

?>